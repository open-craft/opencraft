# Generated by Django 2.2.24 on 2021-12-24 05:30
import string

from django.db import migrations, models
from django.db.backends.utils import truncate_name

def generate_database_name(row):
    """
    This function is a copy of the function instance/models/openedx_instance.py.
    The database name used for external databases/storages, if any.
    """
    name = row.internal_lms_domain.replace('.', '_')
    # Escape all non-ascii characters and truncate to 50 chars.
    # The maximum length for the name of a MySQL database is 64 characters.
    # But since we add suffixes to database_name to generate unique database names
    # for different services (e.g. xqueue) we don't want to use the maximum length here.
    allowed = string.ascii_letters + string.digits + '_'
    escaped = ''.join(char for char in name if char in allowed)
    return truncate_name(escaped, length=50)

def set_database_name(apps, schema_editor):
    Model = apps.get_model('instance', 'OpenEdXInstance')
    for row in Model.objects.all():
        # Temp domain for existing instances
        row.database_name = generate_database_name(row)
        row.save(update_fields=['database_name'])

class Migration(migrations.Migration):

    dependencies = [
        ('instance', '0146_make_internal_mfe_domain_unique'),
    ]

    operations = [
        migrations.AddField(
            model_name='openedxinstance',
            name='database_name',
            field=models.CharField(blank=True, default='', max_length=60),
        ),
        migrations.RunPython(set_database_name, reverse_code=migrations.RunPython.noop)
    ]
