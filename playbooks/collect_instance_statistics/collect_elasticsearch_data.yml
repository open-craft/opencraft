---
# A simple one-off playbook that gathers basic usage information from the configured logs server.
# This is used by the `instance_statistics_csv` management command.

- hosts: all
  vars:
    # This should be overridden to be more unique.
    local_output_dir: /tmp/
    remote_output_filename: /tmp/activity_report
  tasks:
    - name: Ensure necessary packages are installed
      become: yes
      apt:
        name: ['python-setuptools', 'virtualenv']
        state: present

    - name: Copy logs_server_requirements.txt
      copy:
        src: logs_server_requirements.txt
        dest: /tmp/logs_server_requirements.txt

    - name: Copy Elasticsearch CA certificate
      copy:
        content: "{{ elasticsearch_ca_cert }}"
        dest: /tmp/elasticsearch_ca_cert.pem

    - name: Install Elasticsearch packages
      pip:
        requirements: /tmp/logs_server_requirements.txt
        virtualenv: "{{ ansible_env.HOME }}/instance_activity_venv"
        virtualenv_python: python3

    # We have to do a copy+command pair here (instead of script) in order to get
    #   separate channels for stdout and stderr.
    # See also: https://github.com/ansible/ansible-modules-core/pull/4000/files
    - name: Copy query_elasticsearch script
      copy:
        src: query_elasticsearch.py
        dest: /tmp/query_elasticsearch.py

    - name: Run query_elasticsearch script
      command: >
        {{ ansible_env.HOME }}/instance_activity_venv/bin/python /tmp/query_elasticsearch.py
          --host {{ elasticsearch_host }}
          --port {{ elasticsearch_port }}
          {{ '--use-ssl' if elasticsearch_use_ssl else '' }}
          --username {{ elasticsearch_username }}
          --password {{ elasticsearch_password }}
          --ca-certs /tmp/elasticsearch_ca_cert.pem
          --out {{ remote_output_filename }}
          --name-prefixes {{ server_name_prefixes }}
          --start-date {{ start_date }}
          --end-date {{ end_date }}
      register: stats_results

    # For debugging purposes:
    #   stdout contains the computed stats
    #   stderr contains any logs (including edX logs)
    - debug:
        var: stats_results

    - name: Fetch stats
      fetch:
        src: '{{ remote_output_filename }}'
        dest: '{{ local_output_dir }}/hit_statistics'
        flat: yes
      register: fetch_results

    - debug:
        var: fetch_results
