/* tslint:disable */
/* eslint-disable */
/**
 * OpenCraft Instance Manager
 * API for OpenCraft Instance Manager
 *
 * The version of the OpenAPI document: api
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OpenEdXInstanceDeploymentNotification
 */
export interface OpenEdXInstanceDeploymentNotification {
    /**
     * 
     * @type {string}
     * @memberof OpenEdXInstanceDeploymentNotification
     */
    status: OpenEdXInstanceDeploymentNotificationStatusEnum;
    /**
     * 
     * @type {object}
     * @memberof OpenEdXInstanceDeploymentNotification
     */
    deployedChanges: object;
    /**
     * 
     * @type {Date}
     * @memberof OpenEdXInstanceDeploymentNotification
     */
    date: Date;
}

export function OpenEdXInstanceDeploymentNotificationFromJSON(json: any): OpenEdXInstanceDeploymentNotification {
    return OpenEdXInstanceDeploymentNotificationFromJSONTyped(json, false);
}

export function OpenEdXInstanceDeploymentNotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenEdXInstanceDeploymentNotification {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'deployedChanges': json['deployed_changes'],
        'date': (new Date(json['date'])),
    };
}

export function OpenEdXInstanceDeploymentNotificationToJSON(value?: OpenEdXInstanceDeploymentNotification | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'deployed_changes': value.deployedChanges,
        'date': (value.date.toISOString()),
    };
}

/**
* @export
* @enum {string}
*/
export enum OpenEdXInstanceDeploymentNotificationStatusEnum {
    Healthy = 'healthy',
    Unhealthy = 'unhealthy',
    Offline = 'offline',
    Provisioning = 'provisioning',
    Preparing = 'preparing',
    ChangesPending = 'changes_pending'
}


