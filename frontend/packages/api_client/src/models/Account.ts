/* tslint:disable */
/* eslint-disable */
/**
 * OpenCraft Instance Manager
 * API for OpenCraft Instance Manager
 *
 * The version of the OpenAPI document: api
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Account
 */
export interface Account {
    /**
     * 
     * @type {string}
     * @memberof Account
     */
    fullName: string;
    /**
     * This would also be the username of the administrator account on the users's instances.
     * @type {string}
     * @memberof Account
     */
    username: string;
    /**
     * A password for the OpenCraft account.
     * @type {string}
     * @memberof Account
     */
    password: string;
    /**
     * This is also the account name, and where we will send important notices.
     * @type {string}
     * @memberof Account
     */
    email: string;
    /**
     * Date the user accepted the privacy policy.
     * @type {Date}
     * @memberof Account
     */
    acceptedPrivacyPolicy: Date;
    /**
     * User asserts that they have the rights to use to registered domain.
     * @type {boolean}
     * @memberof Account
     */
    acceptDomainCondition: boolean;
    /**
     * I want OpenCraft to keep me updated about important news, tips, and new features, and occasionally send me an email about it.
     * @type {boolean}
     * @memberof Account
     */
    subscribeToUpdates?: boolean;
}

export function AccountFromJSON(json: any): Account {
    return AccountFromJSONTyped(json, false);
}

export function AccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): Account {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fullName': json['full_name'],
        'username': json['username'],
        'password': json['password'],
        'email': json['email'],
        'acceptedPrivacyPolicy': (new Date(json['accepted_privacy_policy'])),
        'acceptDomainCondition': json['accept_domain_condition'],
        'subscribeToUpdates': !exists(json, 'subscribe_to_updates') ? undefined : json['subscribe_to_updates'],
    };
}

export function AccountToJSON(value?: Account | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'full_name': value.fullName,
        'username': value.username,
        'password': value.password,
        'email': value.email,
        'accepted_privacy_policy': (value.acceptedPrivacyPolicy.toISOString()),
        'accept_domain_condition': value.acceptDomainCondition,
        'subscribe_to_updates': value.subscribeToUpdates,
    };
}


