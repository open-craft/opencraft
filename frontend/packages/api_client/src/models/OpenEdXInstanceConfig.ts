/* tslint:disable */
/* eslint-disable */
/**
 * OpenCraft Instance Manager
 * API for OpenCraft Instance Manager
 *
 * The version of the OpenAPI document: api
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OpenEdXInstanceConfig
 */
export interface OpenEdXInstanceConfig {
    /**
     * 
     * @type {number}
     * @memberof OpenEdXInstanceConfig
     */
    readonly id?: number;
    /**
     * The URL students will visit. In the future, you will also have the possibility to use your own domain name.  Example: hogwarts.opencraft.hosting
     * @type {string}
     * @memberof OpenEdXInstanceConfig
     */
    subdomain: string;
    /**
     * The URL students will visit if you are using an external domain.
     * @type {string}
     * @memberof OpenEdXInstanceConfig
     */
    externalDomain?: string | null;
    /**
     * The name of your institution, company or project.  Example: Hogwarts Online Learning
     * @type {string}
     * @memberof OpenEdXInstanceConfig
     */
    instanceName: string;
    /**
     * The email your instance of Open edX will be using to send emails, and where your users should send their support requests.  This needs to be a valid email.
     * @type {string}
     * @memberof OpenEdXInstanceConfig
     */
    publicContactEmail: string;
    /**
     * URL to the privacy policy.
     * @type {string}
     * @memberof OpenEdXInstanceConfig
     */
    privacyPolicyUrl?: string;
    /**
     * The advanced theme allows users to pick a lot more details than the regular theme.Setting this flag will enable the more complex theme editor.
     * @type {boolean}
     * @memberof OpenEdXInstanceConfig
     */
    useAdvancedTheme?: boolean;
    /**
     * The theme configuration data currently being edited by the user. When finalised it willbe copied over to the final theme config which will then be deployed to the next appserverthat is launched.
     * @type {object}
     * @memberof OpenEdXInstanceConfig
     */
    draftThemeConfig?: object | null;
}

export function OpenEdXInstanceConfigFromJSON(json: any): OpenEdXInstanceConfig {
    return OpenEdXInstanceConfigFromJSONTyped(json, false);
}

export function OpenEdXInstanceConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenEdXInstanceConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'subdomain': json['subdomain'],
        'externalDomain': !exists(json, 'external_domain') ? undefined : json['external_domain'],
        'instanceName': json['instance_name'],
        'publicContactEmail': json['public_contact_email'],
        'privacyPolicyUrl': !exists(json, 'privacy_policy_url') ? undefined : json['privacy_policy_url'],
        'useAdvancedTheme': !exists(json, 'use_advanced_theme') ? undefined : json['use_advanced_theme'],
        'draftThemeConfig': !exists(json, 'draft_theme_config') ? undefined : json['draft_theme_config'],
    };
}

export function OpenEdXInstanceConfigToJSON(value?: OpenEdXInstanceConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'subdomain': value.subdomain,
        'external_domain': value.externalDomain,
        'instance_name': value.instanceName,
        'public_contact_email': value.publicContactEmail,
        'privacy_policy_url': value.privacyPolicyUrl,
        'use_advanced_theme': value.useAdvancedTheme,
        'draft_theme_config': value.draftThemeConfig,
    };
}


