# Generated by Django 2.2.12 on 2020-09-24 09:42

import django.core.validators
from django.db import migrations, models
import registration.models


class Migration(migrations.Migration):

    dependencies = [
        ('registration', '0017_betatestapplication_hero_cover_image'),
    ]

    operations = [
        migrations.AlterField(
            model_name='betatestapplication',
            name='external_domain',
            field=models.CharField(blank=True, error_messages={'blacklisted': 'This domain name is not publicly available.', 'reserved': 'Cannot register domain with this subdomain.', 'unique': 'This domain is already taken.'}, help_text='The URL students will visit if you are using an external domain.', max_length=255, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(3, 'The subdomain name must at least have 3 characters.'), django.core.validators.MaxLengthValidator(250, 'The subdomain name can have at most have 250 characters.'), django.core.validators.RegexValidator('^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$', 'Please choose a domain name that you already know and own, containing lower-case letters, numbers, dots, and hyphens. Cannot start or end with a hyphen.'), registration.models.validate_subdomain_is_not_blacklisted], verbose_name='external domain name'),
        ),
        migrations.AlterField(
            model_name='betatestapplication',
            name='subdomain',
            field=models.CharField(error_messages={'blacklisted': 'This domain name is not publicly available.', 'cannot_validate': 'The domain cannot be validated.', 'reserved': 'Cannot register domain with this subdomain.', 'unique': 'This domain is already taken.'}, help_text='The URL students will visit. In the future, you will also have the possibility to use your own domain name.\n\nExample: hogwarts.opencraft.hosting', max_length=255, unique=True, validators=[django.core.validators.MinLengthValidator(3, 'The subdomain name must at least have 3 characters.'), django.core.validators.MaxLengthValidator(63, 'The subdomain name can have at most have 63 characters.'), django.core.validators.RegexValidator('^[a-z0-9]([a-z0-9\\-]+[a-z0-9])?$', 'Please choose a name of at least 3 characters, using lower-case letters, numbers, and hyphens. Cannot start or end with a hyphen.'), registration.models.validate_subdomain_is_not_blacklisted], verbose_name='domain name'),
        ),
    ]
